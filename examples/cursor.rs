#![allow(clippy::single_match)]

use simple_logger::SimpleLogger;
use winit::{
    event::{ElementState, Event, KeyboardInput, WindowEvent},
    event_loop::EventLoop,
    window::{CursorIcon, CursorIconCustom, WindowBuilder},
};

#[rustfmt::skip]
const RGBA_WIN32_PROGRESS: &[u32] = &[0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xa000000, 0x12000000, 0x14000000, 0x14000000, 0x14000000, 0x12000000, 0xa000000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7000000, 0x17000000, 0x700f395b, 0xc41f71b6, 0xff2a97f3, 0xff2a97f3, 0xff2a97f3, 0xc41f71b6, 0x700f395b, 0x17000000, 0x7000000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xa000000, 0x45071c2d, 0xe22584d5, 0xff2a97f3, 0xff2a97f3, 0xff2a97f3, 0xff2a97f3, 0xff2a97f3, 0xff2a97f3, 0xff2a97f3, 0xe22584d5, 0x45071c2d, 0xa000000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7000000, 0x45071c2d, 0xf1278de4, 0xff2a97f3, 0xff2a97f3, 0xff2a97f3, 0xff2a97f3, 0xff2a97f3, 0xff2a97f3, 0xff2a97f3, 0xff2a97f3, 0xff2a97f3, 0xf1278de4, 0x45071c2d, 0x7000000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2602090f, 0xe22584d5, 0xff2a97f3, 0xff2a97f3, 0xff2a97f3, 0xe22584d5, 0x7b12426a, 0x530a253c, 0x7b12426a, 0xe22584d5, 0xff2a97f3, 0xff2a97f3, 0xff2a97f3, 0xe22584d5, 0x17000000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xa000000, 0x79114266, 0xff2a97f3, 0xff2a97f3, 0xff2a97f3, 0xa81a5e98, 0x18000000, 0xf000000, 0x8000000, 0xf000000, 0x18000000, 0xa81a5e98, 0xff2a97f3, 0xff2a97f3, 0xff2a97f3, 0x700f395b, 0xa000000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x12000000, 0xf023b4ed, 0xff26c5fe, 0xff28aef8, 0xe6248ddb, 0x18000000, 0x5000000, 0x0, 0x0, 0x0, 0x5000000, 0x18000000, 0xe22584d5, 0xff2a97f3, 0xff2a97f3, 0xc41f71b6, 0x12000000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x14000000, 0xff25ccff, 0xff25ccff, 0xff25ccff, 0xb61a7eac, 0xf000000, 0x0, 0x0, 0x0, 0x0, 0x0, 0xf000000, 0x7b12426a, 0xff2a97f3, 0xff2a97f3, 0xff2a97f3, 0x14000000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xe700000c, 0x37000104, 0x0, 0x0, 0x0, 0x0, 0x17000000, 0xff25ccff, 0xff25ccff, 0xff25ccff, 0x7e114f6d, 0x8000000, 0x0, 0x0, 0x0, 0x0, 0x0, 0xa000000, 0x530a253c, 0xff2a97f3, 0xff2a97f3, 0xff2a97f3, 0x14000000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xe700000c, 0xbd00010b, 0x37000104, 0x0, 0x0, 0x0, 0x14000000, 0xff25ccff, 0xff25ccff, 0xff25ccff, 0xb51a7eab, 0xf000000, 0x0, 0x0, 0x0, 0x0, 0x0, 0xf000000, 0x7b12426a, 0xff2a97f3, 0xff2a97f3, 0xff2a97f3, 0x14000000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xe700000c, 0xffffffff, 0xbd00010b, 0x37000104, 0x0, 0x0, 0x12000000, 0xf023b4ed, 0xff25ccff, 0xff25ccff, 0xfb25c1fa, 0x26020c0f, 0x5000000, 0x0, 0x0, 0x0, 0x5000000, 0x18000000, 0xe22584d5, 0xff2a97f3, 0xff2a97f3, 0xc41f71b6, 0x12000000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xe700000c, 0xffffffff, 0xffffffff, 0xbd00010b, 0x37000104, 0x0, 0xa000000, 0xa6186f99, 0xff25ccff, 0xff25ccff, 0xff25c9fe, 0xb31b6ca5, 0x18000000, 0xf000000, 0xa000000, 0xf000000, 0x18000000, 0xa81a5e98, 0xff2a97f3, 0xff2a97f3, 0xff2a97f3, 0x700f395b, 0xa000000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xe700000c, 0xffffffff, 0xffffffff, 0xffffffff, 0xbd00010b, 0x37000104, 0x0, 0x17000000, 0xf824b9f5, 0xff26c1fd, 0xff29a1f5, 0xff2a97f3, 0xe22584d5, 0x7b12426a, 0x530a253c, 0x7b12426a, 0xe22584d5, 0xff2a97f3, 0xff2a97f3, 0xff2a97f3, 0xe22584d5, 0x17000000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xe700000c, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xbd00010b, 0x37000104, 0x7000000, 0x5c0b3247, 0xf22792e6, 0xff2a97f3, 0xff2a97f3, 0xff2a97f3, 0xff2a97f3, 0xff2a97f3, 0xff2a97f3, 0xff2a97f3, 0xff2a97f3, 0xff2a97f3, 0xf1278de4, 0x45071c2d, 0x7000000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xe700000c, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xbd00010b, 0x37000104, 0xa000000, 0x45071c2d, 0xe22584d5, 0xff2a97f3, 0xff2a97f3, 0xff2a97f3, 0xff2a97f3, 0xff2a97f3, 0xff2a97f3, 0xff2a97f3, 0xe22584d5, 0x45071c2d, 0xa000000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xe700000c, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xbd00010b, 0x37000104, 0x7000000, 0x17000000, 0x700f395b, 0xc41f71b6, 0xff2a97f3, 0xff2a97f3, 0xff2a97f3, 0xc41f71b6, 0x700f395b, 0x17000000, 0x7000000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xe700000c, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xfff8f9fb, 0xbd00010b, 0x37000104, 0x0, 0xa000000, 0x12000000, 0x14000000, 0x14000000, 0x14000000, 0x12000000, 0xa000000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xe700000c, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xfff0f0f3, 0xbd00010b, 0x37000104, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xe700000c, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffe8e8ea, 0xbd00010b, 0x37000104, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xe700000c, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffe1e1e3, 0xbd00010b, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xe700000c, 0xffffffff, 0xffffffff, 0xffffffff, 0xfff4f4f7, 0xffffffff, 0xffffffff, 0xbd00010b, 0xbd00010b, 0xbd00010b, 0xbd00010b, 0xbd00010b, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xe700000c, 0xffffffff, 0xffffffff, 0xfff4f4f7, 0xf400000d, 0xffb3b4bc, 0xffffffff, 0xbc00010b, 0x4d000106, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xe700000c, 0xffffffff, 0xfff4f4f7, 0xf400000d, 0x37000104, 0xd300000c, 0xffffffff, 0xffe1e1e3, 0xd300000c, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xe700000c, 0xfff4f4f7, 0xf400000d, 0x37000104, 0x0, 0xb400010c, 0xffc2c2c9, 0xffffffff, 0xb400010c, 0x4d000106, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xbd00010b, 0xf400000d, 0x37000104, 0x0, 0x0, 0x37000104, 0xd700000c, 0xffffffff, 0xffd6d6d8, 0xd100000c, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xb400010c, 0xffd6d6d8, 0xffffffff, 0xcc00000c, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1a000002, 0xd700000c, 0x9e00010b, 0x31000004, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0];

fn main() {
    SimpleLogger::new().init().unwrap();
    let event_loop = EventLoop::new();

    let window = WindowBuilder::new().build(&event_loop).unwrap();
    window.set_title("A fantastic window!");

    let mut cursor_idx = 0;

    event_loop.run(move |event, _, control_flow| {
        control_flow.set_wait();

        match event {
            Event::WindowEvent {
                event:
                    WindowEvent::KeyboardInput {
                        input:
                            KeyboardInput {
                                state: ElementState::Pressed,
                                ..
                            },
                        ..
                    },
                ..
            } => {
                println!("Setting cursor to custom");

                let data: std::sync::Arc<[u8]> = (unsafe {
                    std::slice::from_raw_parts(
                        RGBA_WIN32_PROGRESS.as_ptr() as *const u8,
                        RGBA_WIN32_PROGRESS.len() * 4,
                    )
                })
                .into();

                let cursor = CursorIcon::Custom(CursorIconCustom {
                    hotspot_x: 0,
                    hotspot_y: 8,
                    width: 32,
                    height: 32,
                    data,
                });

                window.set_cursor_icon(cursor);
                if cursor_idx < CURSORS.len() - 1 {
                    cursor_idx += 1;
                } else {
                    cursor_idx = 0;
                }
            }
            Event::WindowEvent {
                event: WindowEvent::CloseRequested,
                ..
            } => {
                control_flow.set_exit();
            }
            _ => (),
        }
    });
}

const CURSORS: &[CursorIcon] = &[
    CursorIcon::Default,
    CursorIcon::Crosshair,
    CursorIcon::Hand,
    CursorIcon::Arrow,
    CursorIcon::Move,
    CursorIcon::Text,
    CursorIcon::Wait,
    CursorIcon::Help,
    CursorIcon::Progress,
    CursorIcon::NotAllowed,
    CursorIcon::ContextMenu,
    CursorIcon::Cell,
    CursorIcon::VerticalText,
    CursorIcon::Alias,
    CursorIcon::Copy,
    CursorIcon::NoDrop,
    CursorIcon::Grab,
    CursorIcon::Grabbing,
    CursorIcon::AllScroll,
    CursorIcon::ZoomIn,
    CursorIcon::ZoomOut,
    CursorIcon::EResize,
    CursorIcon::NResize,
    CursorIcon::NeResize,
    CursorIcon::NwResize,
    CursorIcon::SResize,
    CursorIcon::SeResize,
    CursorIcon::SwResize,
    CursorIcon::WResize,
    CursorIcon::EwResize,
    CursorIcon::NsResize,
    CursorIcon::NeswResize,
    CursorIcon::NwseResize,
    CursorIcon::ColResize,
    CursorIcon::RowResize,
];
